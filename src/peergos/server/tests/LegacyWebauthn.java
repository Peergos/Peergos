package peergos.server.tests;

import org.junit.Assert;
import org.junit.Test;
import peergos.server.login.Webauthn;
import peergos.shared.cbor.CborObject;
import peergos.shared.util.ArrayOps;

public class LegacyWebauthn {

    @Test
    public void secp256r1() {
        byte[] raw = ArrayOps.hexToBytes("a36163006164590466aced000573720044636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e417474657374656443726564656e7469616c4461746185df6d0f6d8aacb40200034c00066161677569647400364c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f4141475549443b4c0007636f73654b65797400374c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f434f53454b65793b5b000c63726564656e7469616c49647400025b42787073720034636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e414147554944fb3908248cfbd7d40200014c000576616c75657400104c6a6176612f7574696c2f555549443b78707372000e6a6176612e7574696c2e55554944bc9903f7986d852f0200024a000c6c65617374536967426974734a000b6d6f7374536967426974737870a3d811116f7e8349d548826e79b4db4073720038636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e454332434f53454b6579cfb7122e4f2fdb2a0200044c000563757276657400354c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f43757276653b5b00016471007e00035b00017871007e00035b00017971007e00037872003d636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e4162737472616374434f53454b657911b0302464c2e4c90200044c0009616c676f726974686d7400434c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f73746174656d656e742f434f5345416c676f726974686d4964656e7469666965723b5b000662617365495671007e00035b00056b6579496471007e00034c00066b65794f70737400104c6a6176612f7574696c2f4c6973743b787073720041636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e73746174656d656e742e434f5345416c676f726974686d4964656e746966696572b5e5a801c4dc74180200014a000576616c75657870fffffffffffffff97070707e720033636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e437572766500000000000000001200007872000e6a6176612e6c616e672e456e756d0000000000000000120000787074000953454350323536523170757200025b42acf317f8060854e002000078700000002092070d0adffa715b57673bc2608c25df1d0a0ec1a685e052467aef41f72bd9777571007e0016000000203b13b8aa0e363020418bb382e37d9221db4b716dd89ee8519d72d77942fd5d3e7571007e001600000010637b7a5418144829bd5a10b981bd828f61735857aced000573720042636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e73746174656d656e742e4e6f6e654174746573746174696f6e53746174656d656e746b3b9efd2e6430530200007870");
        CborObject cbor1 = CborObject.fromByteArray(raw);
        Webauthn.Verifier verifier = Webauthn.Verifier.fromCbor(cbor1);
        byte[] credentialId = verifier.getAttestedCredentialData().getCredentialId();
        Assert.assertArrayEquals(ArrayOps.hexToBytes("637b7a5418144829bd5a10b981bd828f"), credentialId);
        byte[] pubKey = verifier.getAttestedCredentialData().getCOSEKey().getPublicKey().getEncoded();
        Assert.assertArrayEquals(pubKey, ArrayOps.hexToBytes("3059301306072a8648ce3d020106082a8648ce3d0301070342000492070d0adffa715b57673bc2608c25df1d0a0ec1a685e052467aef41f72bd9773b13b8aa0e363020418bb382e37d9221db4b716dd89ee8519d72d77942fd5d3e"));
        byte[] aguid = verifier.getAttestedCredentialData().getAaguid().getBytes();
        Assert.assertArrayEquals(aguid, ArrayOps.hexToBytes("d548826e79b4db40a3d811116f7e8349"));
    }

    @Test
    public void largeCredIdSecp256r1() {
        byte[] raw = ArrayOps.hexToBytes("a3616300616459046aaced000573720044636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e417474657374656443726564656e7469616c4461746185df6d0f6d8aacb40200034c00066161677569647400364c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f4141475549443b4c0007636f73654b65797400374c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f434f53454b65793b5b000c63726564656e7469616c49647400025b42787073720034636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e414147554944fb3908248cfbd7d40200014c000576616c75657400104c6a6176612f7574696c2f555549443b78707372000e6a6176612e7574696c2e55554944bc9903f7986d852f0200024a000c6c65617374536967426974734a000b6d6f73745369674269747378708c0b6e020557d7bdfbfc3007154e4ecc73720038636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e454332434f53454b6579cfb7122e4f2fdb2a0200044c000563757276657400354c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f43757276653b5b00016471007e00035b00017871007e00035b00017971007e00037872003d636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e4162737472616374434f53454b657911b0302464c2e4c90200044c0009616c676f726974686d7400434c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f73746174656d656e742f434f5345416c676f726974686d4964656e7469666965723b5b000662617365495671007e00035b00056b6579496471007e00034c00066b65794f70737400104c6a6176612f7574696c2f4c6973743b787073720041636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e73746174656d656e742e434f5345416c676f726974686d4964656e746966696572b5e5a801c4dc74180200014a000576616c75657870fffffffffffffff97070707e720033636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e437572766500000000000000001200007872000e6a6176612e6c616e672e456e756d0000000000000000120000787074000953454350323536523170757200025b42acf317f8060854e002000078700000002010f41543ac784c1eef9526cb93e96fedebc40a147841c074705f7ec07e7db2917571007e00160000002078cae801b9d632d1646ff47b8b41bd28fc14c336ab53bd3959a3d1c5e5d61fdd7571007e0016000000141795e64a8ebbf695bde128ca4bbfba4687fc7ce061735857aced000573720042636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e73746174656d656e742e4e6f6e654174746573746174696f6e53746174656d656e746b3b9efd2e6430530200007870");
        CborObject cbor1 = CborObject.fromByteArray(raw);
        Webauthn.Verifier verifier = Webauthn.Verifier.fromCbor(cbor1);
        byte[] credentialId = verifier.getAttestedCredentialData().getCredentialId();
        Assert.assertArrayEquals(ArrayOps.hexToBytes("1795e64a8ebbf695bde128ca4bbfba4687fc7ce0"), credentialId);
        byte[] pubKey = verifier.getAttestedCredentialData().getCOSEKey().getPublicKey().getEncoded();
        Assert.assertArrayEquals(pubKey, ArrayOps.hexToBytes("3059301306072a8648ce3d020106082a8648ce3d0301070342000410f41543ac784c1eef9526cb93e96fedebc40a147841c074705f7ec07e7db29178cae801b9d632d1646ff47b8b41bd28fc14c336ab53bd3959a3d1c5e5d61fdd"));
        byte[] aguid = verifier.getAttestedCredentialData().getAaguid().getBytes();
        Assert.assertArrayEquals(aguid, ArrayOps.hexToBytes("fbfc3007154e4ecc8c0b6e020557d7bd"));
    }

    @Test
    public void largeCredIdEd25519() {
        byte[] raw = ArrayOps.hexToBytes("a36163186061645904c0aced000573720044636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e417474657374656443726564656e7469616c4461746185df6d0f6d8aacb40200034c00066161677569647400364c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f4141475549443b4c0007636f73654b65797400374c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f434f53454b65793b5b000c63726564656e7469616c49647400025b42787073720034636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e414147554944fb3908248cfbd7d40200014c000576616c75657400104c6a6176612f7574696c2f555549443b78707372000e6a6176612e7574696c2e55554944bc9903f7986d852f0200024a000c6c65617374536967426974734a000b6d6f7374536967426974737870000000000000000000000000000000007372003a636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e4564445341434f53454b65794f34c5f4776431400200034c000563757276657400354c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f61757468656e74696361746f722f43757276653b5b00016471007e00035b00017871007e00037872003d636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e4162737472616374434f53454b657911b0302464c2e4c90200044c0009616c676f726974686d7400434c636f6d2f776562617574686e346a2f646174612f6174746573746174696f6e2f73746174656d656e742f434f5345416c676f726974686d4964656e7469666965723b5b000662617365495671007e00035b00056b6579496471007e00034c00066b65794f70737400104c6a6176612f7574696c2f4c6973743b787073720041636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e73746174656d656e742e434f5345416c676f726974686d4964656e746966696572b5e5a801c4dc74180200014a000576616c75657870fffffffffffffff87070707e720033636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e61757468656e74696361746f722e437572766500000000000000001200007872000e6a6176612e6c616e672e456e756d000000000000000012000078707400074544323535313970757200025b42acf317f8060854e00200007870000000206c2925dd69f0fca5419bc0281fe8d07f38ca28f34299c0d4d5f3e98db2fb66a27571007e00160000009d9cb9c8e97e790014aac29762e945196de4d112df0f8937163d642a55aba2c81a8babbb584ec6aded0265183357f98fa8bd9b9a7e27da0a9846e8b4dc5753ac0a3bac5357004f61e07a01aff051f1777182a6b94d0ca71fbdefad37d39cbbabab2d2da314e103cce6e026e748efc562359787adb548331a17b5cf16ce5bda25d4c403ee11533595288644f5527a3f308a80123d10b58f1271dd4cee04e861735857aced000573720042636f6d2e776562617574686e346a2e646174612e6174746573746174696f6e2e73746174656d656e742e4e6f6e654174746573746174696f6e53746174656d656e746b3b9efd2e6430530200007870");
        CborObject cbor1 = CborObject.fromByteArray(raw);
        Webauthn.Verifier verifier = Webauthn.Verifier.fromCbor(cbor1);
        Assert.assertEquals(157, verifier.getAttestedCredentialData().getCredentialId().length);
        byte[] pubKey = verifier.getAttestedCredentialData().getCOSEKey().getPublicKey().getEncoded();
        Assert.assertArrayEquals(pubKey, ArrayOps.hexToBytes("302a300506032b65700321006c2925dd69f0fca5419bc0281fe8d07f38ca28f34299c0d4d5f3e98db2fb66a2"));
    }
}
